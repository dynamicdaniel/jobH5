import React, { Component } from 'react';

export default class Bk extends Component{
    
    static defaultProps ={
        width:'100%',
        height:'100%',
        float:'left',
        //boxSizing:'border-box',
    }
    
    constructor(props){
        super(props)
        this.state={

            classType:props.className,
            width:props.width,
            height:props.height,
            float:props.float,
            position:props.position,
            left:props.left,
            right:props.right,
            bottom:props.bottom,
            top:props.top,
            textAlign:props.align,
            color:props.color,
            zIndex:props.zIndex,
            display:props.display,
            justifyContent:props.justifyContent,
            alignItems:props.alignItems,
            alignContent:props.alignContent,
            flexWrap:props.flexWrap,

            overflow:props.overflow,
            overflowX:props.overflowX,
            overflowY:props.overflowY,
            opacity:props.opacity,
            visibility:props.visibility,
            fontSize:props.fontSize,
            borderRadius:props.borderRadius,
            borderTopLeftRadius:props.border0,
            borderTopRightRadius:props.border1,
            borderBottomLeftRadius:props.border2,
            borderBottomRightRadius:props.border3,
            border:props.border,
            borderBottom:props.borderBottom,
            borderTop:props.borderTop,
            borderLeft:props.borderLeft,
            borderRight:props.borderRight,
            outline:props.outline,
            margin:props.margin,
            marginBottom:props.marginBottom,
            marginTop:props.marginTop,
            marginLeft:props.marginLeft,
            marginRight:props.marginRight,
            padding:props.padding, 
            paddingBottom:props.paddingBottom,
            paddingTop:props.paddingTop,
            paddingLeft:props.paddingLeft,
            paddingRight:props.paddingRight,
            img:props.img==undefined ? {}:{
                bgImg:`url(${props.img})`,
                bgPos:'center center',
                bgRepeat:'no-repeat',
                bgSize:'100% 100%',
            },
            bg:props.bg,
            bgSize:props.bgSize,
            bgPos:props.bgPos,
            bgRepeat:props.bgRepeat,
            bgColor:props.bgColor,
            boxSizing:props.boxSizing,
            boxShadow:props.boxShadow,
            whiteSpace:props.whiteSpace,
            wordWrap:props.wordWrap,
            wordBreak:props.wordBreak,
            lineHeight:props.lineHeight,
            textOverflow:props.textOverflow,
            pointerEvents:props.pointerEvents,
            boxShadow:props.boxShadow,
        }
    }
    componentWillReceiveProps(data){
        this.setState({
            width:data.width,
            height:data.height,
            float:data.float,
            position:data.position,
            left:data.left,
            right:data.right,
            bottom:data.bottom,
            top:data.top,
            textAlign:data.align,
            color:data.color,
            zIndex:data.zIndex,
            display:data.display,
            justifyContent:data.justifyContent,
            alignItems:data.alignItems,
            alignContent:data.alignContent,
            flexWrap:data.flexWrap,

            overflow:data.overflow,
            overflowX:data.overflowX,
            overflowY:data.overflowY,
            opacity:data.opacity,
            visibility:data.visibility,
            fontSize:data.fontSize,
            borderRadius:data.borderRadius,
            borderTopLeftRadius:data.border0,
            borderTopRightRadius:data.border1,
            borderBottomLeftRadius:data.border2,
            borderBottomRightRadius:data.border3,
            border:data.border,
            borderBottom:data.borderBottom,
            borderTop:data.borderTop,
            borderLeft:data.borderLeft,
            borderRight:data.borderRight,
            outline:data.outline,
            margin:data.margin,
            marginBottom:data.marginBottom,
            marginTop:data.marginTop,
            marginLeft:data.marginLeft,
            marginRight:data.marginRight,
            padding:data.padding, 
            paddingBottom:data.paddingBottom,
            paddingTop:data.paddingTop,
            paddingLeft:data.paddingLeft,
            paddingRight:data.paddingRight,
            img:data.img==undefined ? {}:{
                bgImg:`url(${data.img})`,
                bgPos:'center center',
                bgRepeat:'no-repeat',
                bgSize:'100% 100%',
            },
            bg:data.bg,
            bgSize:data.bgSize,
            bgPos:data.bgPos,
            bgRepeat:data.bgRepeat,
            bgColor:data.bgColor,
            boxSizing:data.boxSizing,
            boxShadow:data.boxShadow,
            whiteSpace:data.whiteSpace,
            wordWrap:data.wordWrap,
            wordBreak:data.wordBreak,
            lineHeight:data.lineHeight,
            textOverflow:data.textOverflow,
            pointerEvents:data.pointerEvents,
            boxShadow:data.boxShadow
        })
    }
    render(){
        return(
            <div className={this.state.classType} 
                
                style={{
                width:this.state.width,
                height:this.state.height,
                float:this.state.float,
                textAlign:this.state.textAlign,
                color:this.state.color,
                zIndex:this.state.zIndex,
                display:this.state.display,
                justifyContent:this.state.justifyContent,
                alignItems:this.state.alignItems,
                alignContent:this.state.alignContent,
                flexWrap:this.state.flexWrap,

                overflow:this.state.overflow,
                overflowX:this.state.overflowX,
                overflowY:this.state.overflowY,
                opacity:this.state.opacity,
                position:this.state.position,
                left:this.state.left,
                right:this.state.right,
                bottom:this.state.bottom,
                top:this.state.top,
                visibility:this.state.visibility,
                fontSize:this.state.fontSize,
                borderTopLeftRadius:this.state.borderTopLeftRadius,
                borderTopRightRadius:this.state.borderTopRightRadius,
                borderBottomLeftRadius:this.state.borderBottomLeftRadius,
                borderBottomRightRadius:this.state.borderBottomRightRadius,
                borderRadius:this.state.borderRadius,
                border:this.state.border,
                borderBottom:this.state.borderBottom,
                borderTop:this.state.borderTop,
                borderLeft:this.state.borderLeft,
                borderRight:this.state.borderRight,
                outline:this.state.outline,
                margin:this.state.margin,
                marginBottom:this.state.marginBottom,
                marginTop:this.state.marginTop,
                marginLeft:this.state.marginLeft,
                marginRight:this.state.marginRight,
                padding:this.state.padding,
                paddingBottom:this.state.paddingBottom,
                paddingTop:this.state.paddingTop,
                paddingLeft:this.state.paddingLeft,
                paddingRight:this.state.paddingRight,
                
                background:this.state.bg,
                backgroundImage:this.state.img.bgImg,
                backgroundSize:this.state.bgSize==undefined?this.state.img.bgSize:this.state.bgSize,
                backgroundPosition:this.state.bgPos==undefined?this.state.img.bgPos:this.state.bgPos,
                backgroundRepeat:this.state.bgRepeat==undefined?this.state.img.bgRepeat:this.state.bgRepeat,
                backgroundColor:this.state.bgColor,
                boxSizing:this.state.boxSizing,
                boxShadow:this.state.boxShadow,
                whiteSpace:this.state.whiteSpace,
                wordWrap:this.state.wordWrap,
                wordBreak:this.state.wordBreak,
                lineHeight:this.state.lineHeight,
                textOverflow:this.state.textOverflow,
                pointerEvents:this.state.pointerEvents,
                boxShadow:this.state.boxShadow
    
            }}
            onClick={this.props.onClick}
            onMouseDown={this.props.onMouseDown}
            onMouseUp={this.props.onMouseUp}
            >
                {this.props.children}
            </div>
        )
    }
}